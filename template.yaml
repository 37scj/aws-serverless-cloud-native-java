AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Rest API to manage a Data Lake of trip links
Globals:
  Function:
    Timeout: 50
    MemorySize: 512
    Environment:
      Variables:
        TABLE_NAME: !Ref TripTable
        ENDPOINT_OVERRIDE: ""

Resources:

  CreateTripsRecordFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/trip-datalake-1.0.0-SNAPSHOT-jar-with-dependencies.jar
      Handler: br.com.fiap.handler.CreateTripsRecord::handleRequest
      Runtime: java8
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TripTable
      Events:
        CreateTripRecord:
          Type: Api
          Properties:
            Path: /trips
            Method: post

  GetTripsByCountryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/trip-datalake-1.0.0-SNAPSHOT-jar-with-dependencies.jar
      Handler: br.com.fiap.handler.GetTripsByCountry::handleRequest
      Runtime: java8
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TripTable
      Events:
        GetTripsByCountry:
          Type: Api
          Properties:
            Path: /trips/{country}
            Method: get

  GetTripsByPeriodFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/trip-datalake-1.0.0-SNAPSHOT-jar-with-dependencies.jar
      Handler: br.com.fiap.handler.GetTripsByPeriod::handleRequest
      Runtime: java8
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TripTable
      Events:
        GetTripsByPeriod:
          Type: Api
          Properties:
            Path: /trips/{country}/period
            Method: get
            RequestParameters:
              - method.request.querystring.start
              - method.request.querystring.end

  GetTripsByCityFunction:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: target/trip-datalake-1.0.0-SNAPSHOT-jar-with-dependencies.jar
        Handler: br.com.fiap.handler.GetTripsByCity::handleRequest
        Runtime: java8
        Policies:
          - DynamoDBCrudPolicy:
              TableName: !Ref TripTable
        Events:
          CreateTripRecord:
            Type: Api
            Properties:
              Path: /trips/{country}/findByCity
              Method: get
              RequestParameters:
                - method.request.querystring.city

  TripTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: trip
      AttributeDefinitions:
        - AttributeName: country
          AttributeType: S
        - AttributeName: city
          AttributeType: S
        - AttributeName: dateTrip
          AttributeType: S
        - AttributeName: reason
          AttributeType: S
      KeySchema:
        - AttributeName: country
          KeyType: HASH
        - AttributeName: dateTrip
          KeyType: RANGE
      LocalSecondaryIndexes:
        - IndexName: cityIndex
          KeySchema:
            - AttributeName: country
              KeyType: HASH
            - AttributeName: city
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: reasonIndex
          KeySchema:
            - AttributeName: country
              KeyType: HASH
            - AttributeName: reason
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST

Outputs:

  CreateTripsRecordFunction:
    Description: "CreateTripsRecord Lambda Function ARN"
    Value: !GetAtt CreateTripsRecordFunction.Arn

  GetTripsByCityFunction:
    Description: "GetTripsByCityFunction Lambda Function ARN"
    Value: !GetAtt GetTripsByCityFunction.Arn

  GetTripsByCountryFunction:
    Description: "GetTripsByCountryFunction Lambda Function ARN"
    Value: !GetAtt GetTripsByCountryFunction.Arn

  GetTripsByPeriodFunction:
    Description: "GetTripsByPeriodFunction Lambda Function ARN"
    Value: !GetAtt GetTripsByPeriodFunction.Arn